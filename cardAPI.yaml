openapi: "3.0.2"
info:
  version: "0.1"
  title: Common Card API (Public)
  description:
    This specification defines a common card API for payment cards used in Switzerland. The API is supposed to be used to manage payment cards (read information, do actions) and concerns FI, Issuer and TPP.
    This specification uses schema definitions from the Common Data Model v1.2.2.
  termsOfService: 'Tbd'
  contact:
    email: info@common-api.ch
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: https://card.common-api.ch
externalDocs:
  description: Find out more about SFTI API specifications
  url: 'https://www.common-api.ch'
tags:
  - name: Cards
    description: Operations related with managing cards
  - name: Card Accounts
    description: Operations related with managing card accounts
  - name: Card Account Statements
    description: Operations related with retrieving card account statements
  - name: Card Transactions
    description: Operations related with retrieving card transactions
  - name: Card Customers
    description: Operations related with managing card customers
  - name: Card Relationships
    description: Operations related with managing card relationships
  - name: Card Consents
    description: Operations related with managing card consents
security:
  - ApiKeyAuth: []
  - OAuth2:
      - read
      - write
paths:
  /cards:
    get:
      tags:
        - Cards
      description: List of cards for the authenticated context including all related information, filtered by query, sorted by cardId.
      summary: Return the list of all cards for the authenticated context (filtered and sorted)
      parameters:
        - in: query
          name: exemplary-query
          schema:
            type: boolean
          example: true
          description: Whether yes or no. More query parameters to add.
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Paginated list of all cards with all related information sorted by cardId
          content:
            application/json:
              schema:
                type: object
                properties:
                  CardList:
                    type: array
                    items:
                      $ref: '#/components/schemas/Card'
                  _links:
                    $ref: '#/components/schemas/linksPagination'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /cards/{cardId}:
    get:
      tags:
        - Cards
      description: A specific existing card including all related information.
      summary: Return a specific existing card
      parameters:
        - name: cardId
          in: path
          description: Uuid v4 of a specific existing card
          required: true
          example: bcb5d762-8d28-43a2-9398-393b2e8d56ba
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Card details with all related information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Card:
                    $ref: '#/components/schemas/Card'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

    put:
      summary: Update card information
      description: Update specific existsing card including all related information
      tags:
        - Cards
      parameters:
        - name: cardId
          in: path
          description: Uuid v4 of a specific existing card
          required: true
          example: bcb5d762-8d28-43a2-9398-393b2e8d56ba
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      requestBody:
        description: Card information to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /card-accounts:
    get:
      tags:
        - Card Accounts
      description: List of card accounts for the authenticated context including all related information, filtered by query, sorted by cardAccountId.
      summary: Return the list of all card accounts for the authenticated context (filtered and sorted)
      parameters:
        - in: query
          name: exemplary-query
          schema:
            type: boolean
          example: true
          description: Whether yes or no. More query parameters to add.
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Paginated list of all card accounts with all related information sorted by cardAccountId
          content:
            application/json:
              schema:
                type: object
                properties:
                  CardAccountList:
                    type: array
                    items:
                      $ref: '#/components/schemas/CardAccount'
                  _links:
                    $ref: '#/components/schemas/linksPagination'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /card-accounts/{cardAccountId}:
    get:
      tags:
        - Card Accounts
      description: A specific existing card account including all related information.
      summary: Return a specific existing card account
      parameters:
        - name: cardAccountId
          in: path
          description: Uuid v4 of a specific existing card account
          required: true
          example: bcb5d762-8d28-43a2-9398-393b2e8d56ba
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Card account details with all related information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Card:
                    $ref: '#/components/schemas/CardAccount'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

    put:
      summary: Update card account information
      description: Update specific existsing card account including all related information
      tags:
        - Card Accounts
      parameters:
        - name: cardAccountId
          in: path
          description: Uuid v4 of a specific existing card account
          required: true
          example: bcb5d762-8d28-43a2-9398-393b2e8d56ba
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      requestBody:
        description: Card account information to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardAccount'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /card-accounts/statements:
    get:
      tags:
        - Card Account Statements
      description: List of card account statements for the authenticated context including all related information, filtered by query, sorted by cardAccountStatementId.
      summary: Return the list of all card account statements for the authenticated context (filtered and sorted)
      parameters:
        - in: query
          name: exemplary-query
          schema:
            type: boolean
          example: true
          description: Whether yes or no. More query parameters to add.
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Paginated list of all card account statements with all related information sorted by cardAccountStatementId
          content:
            application/json:
              schema:
                type: object
                properties:
                  CardAccountStatementList:
                    type: array
                    items:
                      $ref: '#/components/schemas/CardAccountStatement'
                  _links:
                    $ref: '#/components/schemas/linksPagination'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /card-accounts/statements/{cardAccountStatementId}:
    get:
      tags:
        - Card Account Statements
      description: A specific existing card account statement including all related information.
      summary: Return a specific existing card account statement
      parameters:
        - name: cardAccountStatementId
          in: path
          description: Uuid v4 of a specific existing card account statement
          required: true
          example: bcb5d762-8d28-43a2-9398-393b2e8d56ba
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Card account details with all related information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  CardAccountStatement:
                    $ref: '#/components/schemas/CardAccountStatement'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /card/transactions:
    get:
      tags:
        - Card Transactions
      description: List of card transactions for the authenticated context including all related information, filtered by query, sorted by cardTransactionId.
      summary: Return the list of all card transactions for the authenticated context (filtered and sorted)
      parameters:
        - in: query
          name: exemplary-query
          schema:
            type: boolean
          example: true
          description: Whether yes or no. More query parameters to add.
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Paginated list of all card transactions with all related information sorted by cardTransactionId
          content:
            application/json:
              schema:
                type: object
                properties:
                  CardTransactionList:
                    type: array
                    items:
                      $ref: '#/components/schemas/CardTransaction'
                  _links:
                    $ref: '#/components/schemas/linksPagination'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /cards/transactions/{cardTransactionId}:
    get:
      tags:
        - Card Transactions
      description: A specific existing card transaction including all related information.
      summary: Return a specific existing card transaction
      parameters:
        - name: cardTransactionId
          in: path
          description: Uuid v4 of a specific existing card transaction
          required: true
          example: bcb5d762-8d28-43a2-9398-393b2e8d56ba
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Card account details with all related information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  CardTransaction:
                    $ref: '#/components/schemas/CardTransaction'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /card-customers:
    get:
      tags:
        - Card Customers
      description: List of card customers for the authenticated context including all related information, filtered by query, sorted by cardCustomerId.
      summary: Return the list of all card customers for the authenticated context (filtered and sorted)
      parameters:
        - in: query
          name: exemplary-query
          schema:
            type: boolean
          example: true
          description: Whether yes or no. More query parameters to add.
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Paginated list of all card customers with all related information sorted by cardCustomerId
          content:
            application/json:
              schema:
                type: object
                properties:
                  CardCustomerList:
                    type: array
                    items:
                      $ref: '#/components/schemas/CardCustomer'
                  _links:
                    $ref: '#/components/schemas/linksPagination'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /card-customers/{cardCustomerId}:
    get:
      tags:
        - Card Customers
      description: A specific existing card customer including all related information.
      summary: Return a specific existing card customer
      parameters:
        - name: cardCustomerId
          in: path
          description: Uuid v4 of a specific existing card customer
          required: true
          example: bcb5d762-8d28-43a2-9398-393b2e8d56ba
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Card customer details with all related information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Card:
                    $ref: '#/components/schemas/CardCustomer'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

    put:
      summary: Update card customer information
      description: Update specific existsing card customer including all related information
      tags:
        - Card Customers
      parameters:
        - name: cardCustomerId
          in: path
          description: Uuid v4 of a specific existing card customer
          required: true
          example: bcb5d762-8d28-43a2-9398-393b2e8d56ba
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      requestBody:
        description: Card customer information to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardCustomer'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /card-relationships:
    get:
      tags:
        - Card Relationships
      description: List of cards relationships for the authenticated context including all related information, filtered by query, sorted by cardRelationshipId.
      summary: Return the list of all card relationships for the authenticated context (filtered and sorted)
      parameters:
        - in: query
          name: exemplary-query
          schema:
            type: boolean
          example: true
          description: Whether yes or no. More query parameters to add.
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Paginated list of all queried card relationships with all related information sorted by cardRelationshipsId
          content:
            application/json:
              schema:
                type: object
                properties:
                  CardRelationshipList:
                    type: array
                    items:
                      $ref: '#/components/schemas/CardRelationship'
                  _links:
                    $ref: '#/components/schemas/linksPagination'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /card-relationships/{cardRelationshipId}:
    get:
      tags:
        - Card Relationships
      description: A specific existing card relationship all related information.
      summary: Return a specific existing card relationship
      parameters:
        - name: cardRelationshipId
          in: path
          description: Uuid v4 of a specific existing card relationship
          required: true
          example: bcb5d762-8d28-43a2-9398-393b2e8d56ba
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Card relationship details with all related information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Card:
                    $ref: '#/components/schemas/CardRelationship'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

    put:
      summary: Update card relationship information
      description: Update specific existsing card relationship including all related information
      tags:
        - Card Relationships
      parameters:
        - name: cardRelationshipId
          in: path
          description: Uuid v4 of a specific existing card relationship
          required: true
          example: bcb5d762-8d28-43a2-9398-393b2e8d56ba
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      requestBody:
        description: Card information to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardRelationship'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /card-consents:
    get:
      tags:
        - Card Consents
      description: List of card consents for the authenticated context including all related information, filtered by query, sorted by cardConsentId.
      summary: Return the list of all card consents for the authenticated context (filtered and sorted)
      parameters:
        - in: query
          name: exemplary-query
          schema:
            type: boolean
          example: true
          description: Whether yes or no. More query parameters to add.
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Paginated list of all card consents with all related information sorted by cardConsentId
          content:
            application/json:
              schema:
                type: object
                properties:
                  CardList:
                    type: array
                    items:
                      $ref: '#/components/schemas/CardConsent'
                  _links:
                    $ref: '#/components/schemas/linksPagination'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
    post:
      summary: Create a new card consent
      description: Create a new card consent.
      tags:
        - Card Consents
      requestBody:
        description: Card consent details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardConsent'
      parameters:
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '201':
          description: created
          headers:
            location:
              schema:
                type: string
                format: uri
                description: In the location header of the response you will find the URI of the newly created resource. With a GET call to this address you can retrieve a representation of the new product.
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

  /card-consents/{cardConsentId}:
    get:
      tags:
        - Card Consents
      description: A specific existing card consent including all related information.
      summary: Return a specific existing card consent
      parameters:
        - name: cardConsentId
          in: path
          description: Uuid v4 of a specific existing card consent
          required: true
          example: bcb5d762-8d28-43a2-9398-393b2e8d56ba
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: Card consent details with all related information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Card:
                    $ref: '#/components/schemas/CardConsent'
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

    put:
      summary: Update card consent 
      description: Update specific existing card consent including all related information
      tags:
        - Card Consents
      parameters:
        - name: cardConsentId
          in: path
          description: Uuid v4 of a specific existing card consent
          required: true
          example: bcb5d762-8d28-43a2-9398-393b2e8d56ba
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      requestBody:
        description: Card consent to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardConsent'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'

    delete:
      summary: Delete a specific card consent
      description: Delete a specific card consent
      tags:
        - Card Consents
      parameters:
        - name: cardConsentId
          in: path
          description: Uuid v4 of a specific existing card consent
          required: true
          example: bcb5d762-8d28-43a2-9398-393b2e8d56ba
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/clientid_in_header'
        - $ref: '#/components/parameters/correlation_in_header'
        - $ref: '#/components/parameters/agent_in_header'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
          headers:
            X-Correlation-ID:
              schema:
                type: string
              description: Reflects the ID (set by the caller) from the request.
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'


# -------------------------
# -------- Models ---------
# -------------------------
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access

  schemas:
    # ---- Card Account Object ----
    CardAccount:
      description: The representation of a card account object
      type: object
      required:
        - cardAccountId
      properties:
        cardAccountId:
          type: string
          format: uuid
          description: 'The card account object identifier (UUID v4) defined by TPP.'
          example: '9343dd26-4b54-4808-8978-538f8e869d0e'
        name:
          type: string
          description: User-defined card account name
          example: Expenses account
    # ---------
    
    # ---- Card Consent Object ----
    CardConsent:
      description: The representation of a card consent object
      type: object
      required:
        - cardConsentId
      properties:
        cardConsentId:
          type: string
          format: uuid
          description: 'The card consent object identifier (UUID v4) defined by TPP.'
          example: '9343dd26-4b54-4808-8978-538f8e869d0e'
        name:
          type: string
          description: User-defined card consent name
          example: Card 2 Expenses View Consent
    # ---------
    
    # ---- Card Object ----
    Card:
      description: The representation of a card objectw
      type: object
      required:
        - cardId
      properties:
        cardId:
          type: string
          format: uuid
          description: 'The card object identifier (UUID v4) defined by TPP.'
          example: '9343dd26-4b54-4808-8978-538f8e869d0e'
        name:
          type: string
          description: User-defined card name
          example: My 2nd credit card
    # ---------

    # ---- Card Account Statement ----
    CardAccountStatement:
      description: xy
      type: object
      required:
        - cardAccountStatementId
      properties:
        cardAccountStatementId:
          type: string
          format: uuid
          example: d452083f-8316-410d-a609-d49463687329
          description: Uuid v4 of the specific statement
        transactionList:
          type: array
          items:
            $ref: '#/components/schemas/CardAccountStatementItem'          
    # ---------
    # ---- Card Account Statement Item ----
    CardAccountStatementItem:
      description: xy
      type: object
      required:
        - cardAccountStatementItemId
      properties:
        cardAccountStatementItemId:
          type: string
          format: uuid
          example: d452083f-8316-410d-a609-d49463687329
          description: Uuid v4 of the specific item
    # ---------

    # ---- Card Transaction ----
    CardTransaction:
      description: xy
      type: object
      required:
        - cardTransactionId
      properties:
        cardTransactionId:
          type: string
          format: uuid
          example: d452083f-8316-410d-a609-d49463687329
          description: Uuid v4 of the specific transaction
        transactionList:
          type: array
          items:
            $ref: '#/components/schemas/CardTransactionItem'          
    # ---------
    # ---- Card Transaction Item ----
    CardTransactionItem:
      description: xy
      type: object
      required:
        - cardTransactionItemId
      properties:
        cardTransactionItemId:
          type: string
          format: uuid
          example: d452083f-8316-410d-a609-d49463687329
          description: Uuid v4 of the specific item
    # ---------


    # ---- Card Customer ----
    CardCustomer:
      description: Card Customer information .
      type: object
      required:
        - cardCustomerIdId
      properties:
        cardCustomerId:
          type: string
          format: uuid
          description: UUID v4 of the card customer
          example: 576f8de3-6b30-4882-a7af-da2132a456cf
        cardCustomerType:
          type: string
          example: individual
          enum:
            - individual
            - legal_entity
        cardCustomerDetail:
          type: object
          properties:
            name:
              type: string
              maxLength: 70
              description: Name of the card customer
              example: Muster
            surName:
              type: string
              maxLength: 70
              description: Surname of the card customer
              example: Max
            address:
              $ref: '#/components/schemas/structuredAddress'

            cardCustomerLanguage:
              type: string
              example: fr
              description: Preferred contact language of the card customer
              enum:
                - de
                - fr
                - it
                - en
            gender:
              type: string
              enum:
                - male
                - female
                - other
              example: female
              description: Gender of the card customer.
    # ---------
    # ---- Card Relationship ----
    CardRelationship:
      description: Card Relationship Information .
      type: object
      required:
        - cardRelationshipId
      properties:
        cardRelationshipId:
          type: string
          format: uuid
          description: UUID v4 of the card relationship
          example: 576f8de3-6b30-4882-a7af-da2132a456cf
        cardRelationshipType:
          type: string
          example: Type A
          enum:
            - Type A
            - Type B
        cardRelationshipDetail:
          type: object
          properties:
            name:
              type: string
              maxLength: 70
              description: Name of the relationship
              example: whatever
    # ---------

    # ---- Common Data Model v1.2.0
    # ---- Date Formats
    Date:
      type: string
      format: date
      example: 2018-04-13
    DateTime:
      type: string
      format: date-time
      example: 2018-04-13T11:11:11Z
    # --------
    # ---- Links for Pagination----
    linksPagination:
      description: Links (or cursors) returned in the answer of an API call.
      type: object
      properties:
        self:
          type: string
          description: Link / cursor to the current result set (based on the submitted pagination approach)
          example: /card-app/api/v1/cards?offset=75&limit=25
        first:
          type: string
          description: Link / cursor to the first result set (based on the submitted pagination approach)
          example: /card-app/api/v1/cards?offset=0&limit=25
        previous:
          type: string
          description: Link / cursor to the previous result set (based on the submitted pagination approach)
          example: /card-app/api/v1/cards?offset=50&limit=25
        next:
          type: string
          description: Link / cursor to the next result set (based on the submitted pagination approach)
          example: /card-app/api/v1/cards?offset=100&limit=25
        last:
          type: string
          description: Link / cursor to the last result set (based on the submitted pagination approach)
          example: /card-app/api/v1/cards?offset=150&limit=25
    # ---------
    # ---- Currency ----
    Currency:
      description: ISO 4217 code
      type: string
      pattern: '[A-Z]{3}'
      example: CHF
    # ---------
    # ---- Amount ----
    Amount:
      description: amount with currency
      type: object
      required:
        - currency
        - content
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        content:
          description: amount given with fractional digits, the separator is a dot
          type: string
          pattern: '-?\d{1,14}(?:\.\d{1,3})?'
          example: 235.45
    # --------
    # ---- Address compliant to payment address (b.Link & ISO20022)----
    structuredAddress:
      title: Structured Address
      type: object
      required:
        - streetName
        - postCode
        - townName
        - country
      properties:
        streetName:
          type: string
          maxLength: 70
          example: "Rue de la gare"
        buildingNumber:
          type: string
          maxLength: 16
          example: "24"
        postCode:
          type: string
          maxLength: 16
          example: "2501"
        townName:
          type: string
          maxLength: 35
          example: "Biel"
        country:
          type: string
          maxLength: 2
          example: "CH"
    # -----------
    # ---- Country Code ----
    Country:
      type: string
      pattern: '[A-Z]{2}'
      example: CH
      description: 2-Letter ISO 3166-2 Country Code
    # ------------
    # ---- Error Response (compliant to SIX b.Link)
    commonErrorResponse:
      title: Common Error Response
      type: object
      properties:
        type:
          $ref: '#/components/schemas/commonErrorType'
        title:
          type: string
          example:
            This is the general problem description
        detail:
          type: string
          example:
            Detailed problem description with respect to the current request
        instance:
          type: string
          example:
            path/to/corresponding/resource

    commonErrorType:
      title: Common Error Type
      description: Error Types for commonErrorResponse.
      type: string
      enum:
        - /problems/INVALID_PAYLOAD
        - /problems/MALFORMED_PAYLOAD
        - /problems/INVALID_TOKEN
        - /problems/EXPIRED_TOKEN
        - /problems/INSUFFICIENT_PRIVILEGES
        - /problems/NO_ACCESS_TO_RESOURCE
        - /problems/RESOURCE_DOES_NOT_EXIST
        - /problems/RESOURCE_NOT_READY
        - /problems/RESOURCE_TOO_LARGE
        - /problems/WRONG_METHOD
        - /problems/OPERATION_NOT_ALLOWED
        - /problems/TECHNICAL_ERROR
        - /problems/NOT_IMPLEMENTED
        - /problems/SERVICE_UNAVAILABLE
      example: '/problems/TECHNICAL_ERROR'
    # ---- End Error Response
    # ---- End Common Data Model

  # ---- Global Common Header Parameters ----
  parameters:
    clientid_in_header:
      in: header
      name: X-CorAPI-Client-ID
      schema:
        type: string
      description: 'ID of the client forwarded to the provider. (SCOPE: FI)'
      required: true
    correlation_in_header:
      in: header
      name: X-Correlation-ID
      schema:
        type: string
      description: Unique ID (defined by the caller) which will be reflected back in the response.
      required: true
    agent_in_header:
      in: header
      name: User-Agent
      schema:
        type: string
      description: Name and version of the of the Client software
      required: true
    offset:
      name: offset
      in: query
      description: Optional parameter for pagination. The number of items to skip before starting to collect the result set.
      required: false
      schema:
        type: integer
        format: int32
        example: 25
        minimum: 0
    limit:
      name: limit
      in: query
      description: Optional parameter for pagination. Maximum number of entries to be returned.
      required: false
      schema:
        type: integer
        format: int32
        example: 25
        minimum: 1
    cursor:
      name: cursor
      in: query
      description: Optional parameter for pagination. An opaque string value used for pagination.
      required: false
      schema:
        type: string
        example: cursorIDxyz
  # ---- Responses - Standard Errors Common Data Model v1.2.2----
  responses:
    standard400:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    standard401:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    standard403:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Forbidden - The server understood the request but refuses to authorize it.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    standard404:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    standard405:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    standard500:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    standard501:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Not Implemented - The server does not support the functionality required to fulfill the request.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
    standard503:
      headers:
        Content-Type:
          schema:
            type: string
            description: 'application/problem+json; charset=utf-8 according to RFC7807'
            example: application/problem+json
        Content-Language:
          schema:
            type: string
            description: 'Response language - always en'
            example: en
        X-Correlation-ID:
          schema:
            type: string
            description: Client defined ID from request to correlates HTTP requests between a client and server.
            example: f058ebd6-02f7-4d3f-942e-904344e8cde5
      description: Service Unavailable. The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/commonErrorResponse'
  # ---- End Responses - Standard Errors
